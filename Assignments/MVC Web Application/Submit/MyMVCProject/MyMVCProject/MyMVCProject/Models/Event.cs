//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMVCProject.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Event: IValidatableObject
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Event()
        {
            this.Assignments = new HashSet<Assignment>();
        }
    
        public int EventID { get; set; }
        public string Description { get; set; }
        [Display(Name = "Start Date")]
        public Nullable<System.DateTime> StartDate { get; set; }
        [Display(Name = "End Date")]
        public Nullable<System.DateTime> EndDate { get; set; }
        [StringLength(2)]
        public string Location { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Assignment> Assignments { get; set; }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            var endDate = new[] { "EndDate" };
            if (EndDate <= StartDate)
            {
                yield return new ValidationResult("EndDate must be greater than StartDate",endDate);
            }
        }

        public Boolean overlappedWith(Event that)
        {
            return !( (this.StartDate < that.StartDate && this.EndDate < that.EndDate)
                || (this.StartDate > that.StartDate && that.EndDate < this.StartDate) );

            //if ((this.StartDate < that.StartDate && this.EndDate < that.EndDate)
            //    || (this.StartDate > that.StartDate && that.EndDate < this.StartDate))
            //{
            //    return false;
            //}
            //else
            //{
            //    return true;
            //}
        }
    }
}
